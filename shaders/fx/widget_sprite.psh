SamplerState TexS0 : register(s0);
Texture2D Texture0 : register(t0);

struct PS_INPUT {
   float4 Pos : SV_POSITION;
   float4 D0 : COLOR0;
   float4 D1 : COLOR1;
   float4 T0 : TEXCOORD0;
};

half4 main_T0_P0(PS_INPUT i) : SV_TARGET
{
   // INPUTS
   half4 v0 = i.D0;
   half4 v1 = i.D1;
   half2 Tex0 = i.T0;

   half4 r0, r1, r2, r3, r4, r5, r6;

   half4 t0 = Texture0.Sample(TexS0, Tex0.xy);

   r0 = (t0) * (t0);
   r1 = (r0) * (r0);
   t0 = (v0) * (t0);
   r0 = (r0) * (r1);
   r1 = (1-v0) * (v1.a);
   r0.rgb = (r0.rgb) * (v1.rgb) + t0;
   r0.a = t0.a;
   return r0;
};

// occlusion
half4 main_T0_P1(PS_INPUT i) : SV_TARGET
{
   // INPUTS
   half4 v0 = i.D0;
   half4 v1 = i.D1;
   half2 Tex0 = i.T0;

   return half4(1,0,0,1);
};
